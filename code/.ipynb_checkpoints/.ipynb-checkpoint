{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 457,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "from scipy import stats\n",
    "from sklearn.impute import KNNImputer\n",
    "from sklearn.preprocessing import MinMaxScaler\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Integración"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 458,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>887</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Montvila, Rev. Juozas</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>211536</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>888</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Graham, Miss. Margaret Edith</td>\n",
       "      <td>female</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>112053</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>B42</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>889</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Johnston, Miss. Catherine Helen \"Carrie\"</td>\n",
       "      <td>female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>W./C. 6607</td>\n",
       "      <td>23.4500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>890</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Behr, Mr. Karl Howell</td>\n",
       "      <td>male</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>111369</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>C148</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>891</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Dooley, Mr. Patrick</td>\n",
       "      <td>male</td>\n",
       "      <td>32.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>370376</td>\n",
       "      <td>7.7500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>891 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived  Pclass  \\\n",
       "0              1         0       3   \n",
       "1              2         1       1   \n",
       "2              3         1       3   \n",
       "3              4         1       1   \n",
       "4              5         0       3   \n",
       "..           ...       ...     ...   \n",
       "886          887         0       2   \n",
       "887          888         1       1   \n",
       "888          889         0       3   \n",
       "889          890         1       1   \n",
       "890          891         0       3   \n",
       "\n",
       "                                                  Name     Sex   Age  SibSp  \\\n",
       "0                              Braund, Mr. Owen Harris    male  22.0      1   \n",
       "1    Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
       "2                               Heikkinen, Miss. Laina  female  26.0      0   \n",
       "3         Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
       "4                             Allen, Mr. William Henry    male  35.0      0   \n",
       "..                                                 ...     ...   ...    ...   \n",
       "886                              Montvila, Rev. Juozas    male  27.0      0   \n",
       "887                       Graham, Miss. Margaret Edith  female  19.0      0   \n",
       "888           Johnston, Miss. Catherine Helen \"Carrie\"  female   NaN      1   \n",
       "889                              Behr, Mr. Karl Howell    male  26.0      0   \n",
       "890                                Dooley, Mr. Patrick    male  32.0      0   \n",
       "\n",
       "     Parch            Ticket     Fare Cabin Embarked  \n",
       "0        0         A/5 21171   7.2500   NaN        S  \n",
       "1        0          PC 17599  71.2833   C85        C  \n",
       "2        0  STON/O2. 3101282   7.9250   NaN        S  \n",
       "3        0            113803  53.1000  C123        S  \n",
       "4        0            373450   8.0500   NaN        S  \n",
       "..     ...               ...      ...   ...      ...  \n",
       "886      0            211536  13.0000   NaN        S  \n",
       "887      0            112053  30.0000   B42        S  \n",
       "888      2        W./C. 6607  23.4500   NaN        S  \n",
       "889      0            111369  30.0000  C148        C  \n",
       "890      0            370376   7.7500   NaN        Q  \n",
       "\n",
       "[891 rows x 12 columns]"
      ]
     },
     "execution_count": 458,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic_df = pd.read_csv('../data/train.csv')\n",
    "titanic_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 459,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>714.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.383838</td>\n",
       "      <td>2.308642</td>\n",
       "      <td>29.699118</td>\n",
       "      <td>0.523008</td>\n",
       "      <td>0.381594</td>\n",
       "      <td>32.204208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>257.353842</td>\n",
       "      <td>0.486592</td>\n",
       "      <td>0.836071</td>\n",
       "      <td>14.526497</td>\n",
       "      <td>1.102743</td>\n",
       "      <td>0.806057</td>\n",
       "      <td>49.693429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.420000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>223.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>20.125000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.910400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14.454200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>668.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>31.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>512.329200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       PassengerId    Survived      Pclass         Age       SibSp  \\\n",
       "count   891.000000  891.000000  891.000000  714.000000  891.000000   \n",
       "mean    446.000000    0.383838    2.308642   29.699118    0.523008   \n",
       "std     257.353842    0.486592    0.836071   14.526497    1.102743   \n",
       "min       1.000000    0.000000    1.000000    0.420000    0.000000   \n",
       "25%     223.500000    0.000000    2.000000   20.125000    0.000000   \n",
       "50%     446.000000    0.000000    3.000000   28.000000    0.000000   \n",
       "75%     668.500000    1.000000    3.000000   38.000000    1.000000   \n",
       "max     891.000000    1.000000    3.000000   80.000000    8.000000   \n",
       "\n",
       "            Parch        Fare  \n",
       "count  891.000000  891.000000  \n",
       "mean     0.381594   32.204208  \n",
       "std      0.806057   49.693429  \n",
       "min      0.000000    0.000000  \n",
       "25%      0.000000    7.910400  \n",
       "50%      0.000000   14.454200  \n",
       "75%      0.000000   31.000000  \n",
       "max      6.000000  512.329200  "
      ]
     },
     "execution_count": 459,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic_df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Selección"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 460,
   "metadata": {},
   "outputs": [],
   "source": [
    "name = titanic_df[\"Name\"].str.split(\".\", n = 1, expand = True )\n",
    "title = name[0].str.split(\",\", n = 1, expand = True)[1]\n",
    "titanic_df[\"Title\"] = title.apply(lambda x: x.strip()).astype(str)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 461,
   "metadata": {},
   "outputs": [],
   "source": [
    "titanic_df[\"NFamily\"] = titanic_df[\"SibSp\"] + titanic_df[\"Parch\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 462,
   "metadata": {},
   "outputs": [],
   "source": [
    "def splitAndCount(cabin):\n",
    "    return len(cabin.split(\" \"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 463,
   "metadata": {},
   "outputs": [],
   "source": [
    "titanic_df[\"Cabin\"] = titanic_df[\"Cabin\"].astype(str)\n",
    "cabins = titanic_df[\"Cabin\"].apply(splitAndCount)\n",
    "titanic_df[\"NCabin\"] = cabins"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 464,
   "metadata": {},
   "outputs": [],
   "source": [
    "cat_dummies = pd.get_dummies(titanic_df[[\"Embarked\",\"Title\"]], drop_first=True)\n",
    "titanic_df = pd.concat([titanic_df, cat_dummies], axis=1)\n",
    "titanic_df[\"Sex\"] = titanic_df['Sex'].map( {'female': 0, 'male': 1} ).astype(int)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 465,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>Fare</th>\n",
       "      <th>NFamily</th>\n",
       "      <th>NCabin</th>\n",
       "      <th>Embarked_Q</th>\n",
       "      <th>Embarked_S</th>\n",
       "      <th>Title_Col</th>\n",
       "      <th>...</th>\n",
       "      <th>Title_Master</th>\n",
       "      <th>Title_Miss</th>\n",
       "      <th>Title_Mlle</th>\n",
       "      <th>Title_Mme</th>\n",
       "      <th>Title_Mr</th>\n",
       "      <th>Title_Mrs</th>\n",
       "      <th>Title_Ms</th>\n",
       "      <th>Title_Rev</th>\n",
       "      <th>Title_Sir</th>\n",
       "      <th>Title_the Countess</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>22.0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>35.0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>27.0</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>23.4500</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>26.0</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>32.0</td>\n",
       "      <td>7.7500</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>891 rows × 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Survived  Pclass  Sex   Age     Fare  NFamily  NCabin  Embarked_Q  \\\n",
       "0           0       3    1  22.0   7.2500        1       1           0   \n",
       "1           1       1    0  38.0  71.2833        1       1           0   \n",
       "2           1       3    0  26.0   7.9250        0       1           0   \n",
       "3           1       1    0  35.0  53.1000        1       1           0   \n",
       "4           0       3    1  35.0   8.0500        0       1           0   \n",
       "..        ...     ...  ...   ...      ...      ...     ...         ...   \n",
       "886         0       2    1  27.0  13.0000        0       1           0   \n",
       "887         1       1    0  19.0  30.0000        0       1           0   \n",
       "888         0       3    0   NaN  23.4500        3       1           0   \n",
       "889         1       1    1  26.0  30.0000        0       1           0   \n",
       "890         0       3    1  32.0   7.7500        0       1           1   \n",
       "\n",
       "     Embarked_S  Title_Col  ...  Title_Master  Title_Miss  Title_Mlle  \\\n",
       "0             1          0  ...             0           0           0   \n",
       "1             0          0  ...             0           0           0   \n",
       "2             1          0  ...             0           1           0   \n",
       "3             1          0  ...             0           0           0   \n",
       "4             1          0  ...             0           0           0   \n",
       "..          ...        ...  ...           ...         ...         ...   \n",
       "886           1          0  ...             0           0           0   \n",
       "887           1          0  ...             0           1           0   \n",
       "888           1          0  ...             0           1           0   \n",
       "889           0          0  ...             0           0           0   \n",
       "890           0          0  ...             0           0           0   \n",
       "\n",
       "     Title_Mme  Title_Mr  Title_Mrs  Title_Ms  Title_Rev  Title_Sir  \\\n",
       "0            0         1          0         0          0          0   \n",
       "1            0         0          1         0          0          0   \n",
       "2            0         0          0         0          0          0   \n",
       "3            0         0          1         0          0          0   \n",
       "4            0         1          0         0          0          0   \n",
       "..         ...       ...        ...       ...        ...        ...   \n",
       "886          0         0          0         0          1          0   \n",
       "887          0         0          0         0          0          0   \n",
       "888          0         0          0         0          0          0   \n",
       "889          0         1          0         0          0          0   \n",
       "890          0         1          0         0          0          0   \n",
       "\n",
       "     Title_the Countess  \n",
       "0                     0  \n",
       "1                     0  \n",
       "2                     0  \n",
       "3                     0  \n",
       "4                     0  \n",
       "..                  ...  \n",
       "886                   0  \n",
       "887                   0  \n",
       "888                   0  \n",
       "889                   0  \n",
       "890                   0  \n",
       "\n",
       "[891 rows x 25 columns]"
      ]
     },
     "execution_count": 465,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "del titanic_df[\"PassengerId\"]\n",
    "del titanic_df[\"Name\"]\n",
    "del titanic_df[\"Ticket\"]\n",
    "del titanic_df[\"Cabin\"]\n",
    "del titanic_df[\"SibSp\"]\n",
    "del titanic_df[\"Parch\"]\n",
    "del titanic_df[\"Embarked\"]\n",
    "del titanic_df[\"Title\"]\n",
    "titanic_df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Conversión"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Normalización"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 483,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>Fare</th>\n",
       "      <th>NFamily</th>\n",
       "      <th>NCabin</th>\n",
       "      <th>Embarked_Q</th>\n",
       "      <th>Embarked_S</th>\n",
       "      <th>Title_Col</th>\n",
       "      <th>...</th>\n",
       "      <th>Title_Master</th>\n",
       "      <th>Title_Miss</th>\n",
       "      <th>Title_Mlle</th>\n",
       "      <th>Title_Mme</th>\n",
       "      <th>Title_Mr</th>\n",
       "      <th>Title_Mrs</th>\n",
       "      <th>Title_Ms</th>\n",
       "      <th>Title_Rev</th>\n",
       "      <th>Title_Sir</th>\n",
       "      <th>Title_the Countess</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.271174</td>\n",
       "      <td>0.014151</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.472229</td>\n",
       "      <td>0.139136</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.321438</td>\n",
       "      <td>0.015469</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.434531</td>\n",
       "      <td>0.103644</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.434531</td>\n",
       "      <td>0.015713</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.334004</td>\n",
       "      <td>0.025374</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.233476</td>\n",
       "      <td>0.058556</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.045771</td>\n",
       "      <td>0.3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.321438</td>\n",
       "      <td>0.058556</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.396833</td>\n",
       "      <td>0.015127</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>891 rows × 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Survived  Pclass  Sex       Age      Fare  NFamily  NCabin  Embarked_Q  \\\n",
       "0         0.0     1.0  1.0  0.271174  0.014151      0.1     0.0         0.0   \n",
       "1         1.0     0.0  0.0  0.472229  0.139136      0.1     0.0         0.0   \n",
       "2         1.0     1.0  0.0  0.321438  0.015469      0.0     0.0         0.0   \n",
       "3         1.0     0.0  0.0  0.434531  0.103644      0.1     0.0         0.0   \n",
       "4         0.0     1.0  1.0  0.434531  0.015713      0.0     0.0         0.0   \n",
       "..        ...     ...  ...       ...       ...      ...     ...         ...   \n",
       "886       0.0     0.5  1.0  0.334004  0.025374      0.0     0.0         0.0   \n",
       "887       1.0     0.0  0.0  0.233476  0.058556      0.0     0.0         0.0   \n",
       "888       0.0     1.0  0.0       NaN  0.045771      0.3     0.0         0.0   \n",
       "889       1.0     0.0  1.0  0.321438  0.058556      0.0     0.0         0.0   \n",
       "890       0.0     1.0  1.0  0.396833  0.015127      0.0     0.0         1.0   \n",
       "\n",
       "     Embarked_S  Title_Col  ...  Title_Master  Title_Miss  Title_Mlle  \\\n",
       "0           1.0        0.0  ...           0.0         0.0         0.0   \n",
       "1           0.0        0.0  ...           0.0         0.0         0.0   \n",
       "2           1.0        0.0  ...           0.0         1.0         0.0   \n",
       "3           1.0        0.0  ...           0.0         0.0         0.0   \n",
       "4           1.0        0.0  ...           0.0         0.0         0.0   \n",
       "..          ...        ...  ...           ...         ...         ...   \n",
       "886         1.0        0.0  ...           0.0         0.0         0.0   \n",
       "887         1.0        0.0  ...           0.0         1.0         0.0   \n",
       "888         1.0        0.0  ...           0.0         1.0         0.0   \n",
       "889         0.0        0.0  ...           0.0         0.0         0.0   \n",
       "890         0.0        0.0  ...           0.0         0.0         0.0   \n",
       "\n",
       "     Title_Mme  Title_Mr  Title_Mrs  Title_Ms  Title_Rev  Title_Sir  \\\n",
       "0          0.0       1.0        0.0       0.0        0.0        0.0   \n",
       "1          0.0       0.0        1.0       0.0        0.0        0.0   \n",
       "2          0.0       0.0        0.0       0.0        0.0        0.0   \n",
       "3          0.0       0.0        1.0       0.0        0.0        0.0   \n",
       "4          0.0       1.0        0.0       0.0        0.0        0.0   \n",
       "..         ...       ...        ...       ...        ...        ...   \n",
       "886        0.0       0.0        0.0       0.0        1.0        0.0   \n",
       "887        0.0       0.0        0.0       0.0        0.0        0.0   \n",
       "888        0.0       0.0        0.0       0.0        0.0        0.0   \n",
       "889        0.0       1.0        0.0       0.0        0.0        0.0   \n",
       "890        0.0       1.0        0.0       0.0        0.0        0.0   \n",
       "\n",
       "     Title_the Countess  \n",
       "0                   0.0  \n",
       "1                   0.0  \n",
       "2                   0.0  \n",
       "3                   0.0  \n",
       "4                   0.0  \n",
       "..                  ...  \n",
       "886                 0.0  \n",
       "887                 0.0  \n",
       "888                 0.0  \n",
       "889                 0.0  \n",
       "890                 0.0  \n",
       "\n",
       "[891 rows x 25 columns]"
      ]
     },
     "execution_count": 483,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scaler = MinMaxScaler()\n",
    "titanic_normalized_df = pd.DataFrame(scaler.fit_transform(titanic_df), columns = titanic_df.columns)\n",
    "titanic_normalized_df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Datos perdidos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 485,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Survived                0\n",
       "Pclass                  0\n",
       "Sex                     0\n",
       "Age                   177\n",
       "Fare                    0\n",
       "NFamily                 0\n",
       "NCabin                  0\n",
       "Embarked_Q              0\n",
       "Embarked_S              0\n",
       "Title_Col               0\n",
       "Title_Don               0\n",
       "Title_Dr                0\n",
       "Title_Jonkheer          0\n",
       "Title_Lady              0\n",
       "Title_Major             0\n",
       "Title_Master            0\n",
       "Title_Miss              0\n",
       "Title_Mlle              0\n",
       "Title_Mme               0\n",
       "Title_Mr                0\n",
       "Title_Mrs               0\n",
       "Title_Ms                0\n",
       "Title_Rev               0\n",
       "Title_Sir               0\n",
       "Title_the Countess      0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 485,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "titanic_normalized_df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 486,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Survived              0\n",
       "Pclass                0\n",
       "Sex                   0\n",
       "Age                   0\n",
       "Fare                  0\n",
       "NFamily               0\n",
       "NCabin                0\n",
       "Embarked_Q            0\n",
       "Embarked_S            0\n",
       "Title_Col             0\n",
       "Title_Don             0\n",
       "Title_Dr              0\n",
       "Title_Jonkheer        0\n",
       "Title_Lady            0\n",
       "Title_Major           0\n",
       "Title_Master          0\n",
       "Title_Miss            0\n",
       "Title_Mlle            0\n",
       "Title_Mme             0\n",
       "Title_Mr              0\n",
       "Title_Mrs             0\n",
       "Title_Ms              0\n",
       "Title_Rev             0\n",
       "Title_Sir             0\n",
       "Title_the Countess    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 486,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "imputer = KNNImputer(n_neighbors=5)\n",
    "imputed = imputer.fit_transform(titanic_normalized_df)\n",
    "titanic_normalized_df = pd.DataFrame(imputed, columns=titanic_normalized_df.columns)\n",
    "\n",
    "titanic_normalized_df.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Valores extremos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 487,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fb4d11ba290>"
      ]
     },
     "execution_count": 487,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(data = titanic_normalized_df[\"Age\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 488,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fb4d0f55250>"
      ]
     },
     "execution_count": 488,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(data = titanic_normalized_df[\"Fare\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 489,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fb4d12b0750>"
      ]
     },
     "execution_count": 489,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(data = titanic_normalized_df, x = \"Pclass\", y = \"Fare\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 490,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fb4d11ca650>"
      ]
     },
     "execution_count": 490,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(data = titanic_normalized_df[\"NFamily\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 491,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fb4d0956b90>"
      ]
     },
     "execution_count": 491,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(data = titanic_normalized_df[\"NCabin\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Comprobacion de la normalidad"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 492,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Age\n",
      "----------------------------------------------\n",
      "Shapiro-Wilk: 0.983,p-valor= 0.000\n",
      "Kolmogorov-Smirnov: 0.500,p-valor= 0.000\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYUAAAEGCAYAAACKB4k+AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjMsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+AADFEAAAVuElEQVR4nO3df7BkZX3n8feHX+O6KiBzVWTAAWsSQtiw6i0WtZIhEF2CBlgXDVOrIpKdxYhLMLWrrn+MrmWVbhIVLRN3NoCQckGDMcyyJoQiqJvdBR2IGMQYZhFxAsIoCEkow6/v/tGnjz09fef23Hu7+97b71fV1O1zznPO+T6n+97PPOd0n05VIUkSwH6TLkCStHwYCpKklqEgSWoZCpKklqEgSWodMOkCFmPt2rW1fv36SZchSSvKrbfe+oOqmhm0bEWHwvr169m+ffuky5CkFSXJd+da5ukjSVLLUJAktQwFSVLLUJAktQwFSVLLUJAktQwFSVLLUJAktVb0h9c0Xp/68t0LXveCjccsYSWSRsWRgiSpNbJQSHJZkgeT3NEz77eS/HWSbyT5QpJDepa9J8mOJN9O8i9HVZckaW6jHCl8Gjitb94NwPFV9XPA3wDvAUhyHHAO8LPNOr+bZP8R1iZJGmBkoVBVXwEe6pv3Z1X1ZDN5M7CueXwmcHVV/WNVfQfYAZw4qtokSYNN8prCW4E/aR4fAXyvZ9nOZt4ekmxOsj3J9l27do24REmaLhMJhSTvBZ4EPtOdNaBZDVq3qrZW1WxVzc7MDLwduCRpgcb+ltQk5wKvBU6tqu4f/p3AkT3N1gH3jbs2SZp2Yx0pJDkNeBdwRlU91rNoG3BOkjVJjgY2AF8dZ22SpBGOFJJcBZwMrE2yE9hC591Ga4AbkgDcXFUXVNU3k3wOuJPOaaW3V9VTo6pNkjTYyEKhqjYNmH3pXtp/EPjgqOqRJM3PTzRLklqGgiSpZShIklqGgiSpZShIklqGgiSpZShIklp+85rGwm9tk1YGRwqSpJYjBS17jjKk8XGkIElqGQqSpJahIElqGQqSpJahIElqGQqSpJahIElqGQqSpJahIElqGQqSpJahIElqGQqSpJahIElqjSwUklyW5MEkd/TMe26SG5Lc1fw8tJmfJB9PsiPJN5K8dFR1SZLmNsqRwqeB0/rmvRu4sao2ADc20wC/DGxo/m0Gfm+EdUmS5jCyUKiqrwAP9c0+E7iieXwFcFbP/Cur42bgkCSHj6o2SdJg476m8Pyquh+g+fm8Zv4RwPd62u1s5u0hyeYk25Ns37Vr10iLlaRps1wuNGfAvBrUsKq2VtVsVc3OzMyMuCxJmi7j/jrOB5IcXlX3N6eHHmzm7wSO7Gm3DrhvzLWteov5WktJ02HcI4VtwLnN43OBa3vmv7l5F9JJwCPd00ySpPEZ2UghyVXAycDaJDuBLcCHgM8lOR+4F3h90/yLwOnADuAx4LxR1SVJmtvIQqGqNs2x6NQBbQt4+6hqkSQNZ7lcaJYkLQOGgiSpZShIklqGgiSpZShIklqGgiSpZShIklqGgiSpZShIklqGgiSpNe67pEpjtZg7w16w8ZglrERaGRwpSJJahoIkqWUoSJJahoIkqWUoSJJahoIkqWUoSJJahoIkqWUoSJJahoIkqWUoSJJahoIkqTWRUEhycZJvJrkjyVVJnpHk6CS3JLkryWeTHDSJ2iRpmo09FJIcAfx7YLaqjgf2B84BPgx8tKo2AA8D54+7NkmadpM6fXQA8E+SHAA8E7gfOAW4pll+BXDWhGqTpKk19lCoqr8Ffhu4l04YPALcCvyoqp5smu0Ejhi0fpLNSbYn2b5r165xlCxJU2MSp48OBc4EjgZeCPxT4JcHNK1B61fV1qqararZmZmZ0RUqSVNoEqePfgn4TlXtqqongD8CXgEc0pxOAlgH3DeB2iRpqk0iFO4FTkryzCQBTgXuBG4Czm7anAtcO4HaJGmqTeKawi10LijfBvxVU8NW4F3AO5PsAA4DLh13bZI07Q6Yv8nSq6otwJa+2XcDJ06gHElSw080S5JahoIkqWUoSJJahoIkqWUoSJJahoIkqWUoSJJahoIkqWUoSJJahoIkqWUoSJJaQ4VCkouSPCcdlya5LcmrR12cJGm8hh0pvLWqHgVeDcwA5wEfGllVkqSJGDYU0vw8Hbi8qm7vmSdJWiWGDYVbk/wZnVC4PsmzgadHV5YkaRKG/T6F84F/DtxdVY8lOYzOKSRJ0ioy7Ejhhqq6rap+BFBVPwQ+OrqyJEmTsNeRQpJnAM8E1iY5lJ9cR3gO8MIR1yZJGrP5Th/9O+A36ATArfwkFB4FPjnCuiRJE7DXUKiqS4BLkryjqj4xppokSRMy1IXmqvpEklcA63vXqaorR1SXJGkChgqFJH8AvBj4OvBUM7sAQ0GSVpFh35I6CxxXVTXKYiRJkzXsW1LvAF6wVDtNckiSa5L8dZJvJXl5kucmuSHJXc3PQ5dqf5Kk4QwbCmuBO5Ncn2Rb998i9nsJ8KdVdSxwAvAt4N3AjVW1AbixmZYkjdGwp4/et1Q7TPIc4BeAtwBU1ePA40nOBE5uml0BfAl411LtV5I0v2HfffTlJdznMcAu4PIkJ9D5/MNFwPOr6v5mf/cned6glZNsBjYDHHXUUUtYliRp2O9T+Lskjzb/fpzkqSSPLnCfBwAvBX6vql4C/AP7cKqoqrZW1WxVzc7MzCywBEnSIMOOFJ7dO53kLODEBe5zJ7Czqm5ppq+hEwoPJDm8GSUcDjy4wO1LkhZoQV/HWVV/DJyywHW/D3wvyU83s04F7gS2Aec2884Frl3I9iVJCzfsh9de1zO5H53PLSzmMwvvAD6T5CDgbjq34d4P+FyS84F7gdcvYvuSpAUY9t1Hv9Lz+EngHuDMhe60qr5OJ1j6nbrQbUqSFm/Yawp+oY4kTYFh3320LskXkjyY5IEkn0+ybtTFSZLGa9gLzZfTuRD8QuAI4H808yRJq8iwoTBTVZdX1ZPNv08DfkhAklaZYS80/yDJG4GrmulNwA9HU5KkT3357gWve8HGY5awEk2bYUcKbwXeAHwfuB84m87bSCVJq8iwI4UPAOdW1cMASZ4L/DadsJAkrRLDjhR+rhsIAFX1EPCS0ZQkSZqUYUNhv94vvWlGCsOOMiRJK8Swf9h/B/g/Sa6hc3uLNwAfHFlV0jKwmIu94AVfrUzDfqL5yiTb6dwEL8DrqurOkVYmSRq7oU8BNSFgEEjSKragW2dLklYnQ0GS1DIUJEktQ0GS1DIUJEktQ0GS1DIUJEktQ0GS1DIUJEktQ0GS1DIUJEmtid3+Osn+wHbgb6vqtUmOBq4GngvcBrypqh4f1f69A6ZGbbGvMWkSJjlSuAj4Vs/0h4GPVtUG4GHg/IlUJUlTbCKhkGQd8Brg95vp0Lkt9zVNkyuAsyZRmyRNs0mNFD4G/Efg6Wb6MOBHVfVkM70TOGIShUnSNBv7NYUkrwUerKpbk5zcnT2gac2x/mZgM8BRRx01khqllWwx1zK8VqZJjBReCZyR5B46F5ZPoTNyOCRJN6TWAfcNWrmqtlbVbFXNzszMjKNeSZoaYw+FqnpPVa2rqvXAOcCfV9W/AW4Czm6anQtcO+7aJGnaLafPKbwLeGeSHXSuMVw64XokaepM7HMKAFX1JeBLzeO7gRMnWY8kTbvlNFKQJE2YoSBJahkKkqSWoSBJahkKkqSWoSBJahkKkqTWRD+noH3nPfoljZIjBUlSy1CQJLUMBUlSy1CQJLUMBUlSy1CQJLUMBUlSy1CQJLUMBUlSy1CQJLUMBUlSy1CQJLUMBUlSy1CQJLUMBUlSy1CQJLXG/iU7SY4ErgReADwNbK2qS5I8F/gssB64B3hDVT087vrGwS/KkbRcTWKk8CTwm1X1M8BJwNuTHAe8G7ixqjYANzbTkqQxGnsoVNX9VXVb8/jvgG8BRwBnAlc0za4Azhp3bZI07SZ6TSHJeuAlwC3A86vqfugEB/C8OdbZnGR7ku27du0aV6mSNBUmFgpJngV8HviNqnp02PWqamtVzVbV7MzMzOgKlKQpNJFQSHIgnUD4TFX9UTP7gSSHN8sPBx6cRG2SNM0m8e6jAJcC36qqj/Qs2gacC3yo+XntuGuTpt1i3hl3wcZjlrASTcrYQwF4JfAm4K+SfL2Z95/ohMHnkpwP3Au8fgK1SdJUG3soVNVfAJlj8anjrGUx/KyBpNXITzRLklqGgiSpNYlrCpJWocWeUvVC9fLgSEGS1DIUJEktQ0GS1DIUJEktLzRLWhb8NPXy4EhBktQyFCRJLUNBktQyFCRJLUNBktQyFCRJLUNBktQyFCRJLUNBktQyFCRJLW9zIWmqeXuN3RkKklY8vzN96Xj6SJLUMhQkSS1DQZLUWnahkOS0JN9OsiPJu0e1n+suv4TrLr+EC191LG87+cXt/O7j6y6/BIBfP2XDbuv0tu1fDvDeX/353dr3Tl/8mhN2W693W9ddfgkfuWjTbtvqbd9bU/dnb/tuHd1lF77q2N3W7a+7O93/s/u4e3x6l33kok27HYMLX3XsHsekO91d/yMXbWqXX/yaE3Zr+95f/fndjvfbTn5xu27/trpte5d3j2F/Xf37uvg1J+zxPPfX2f987O110Nun3m31tu89Zt3p3se9de7tuerddve11Pua6rbv329Xb93dY9g7b67XRe/+51rW7U/3GPa/Xvtfz7397F823+/RfNvune4/Pr19WIju62vQfufzvve9b1H7nsS2l9WF5iT7A58EXgXsBL6WZFtV3bnU+/qfV3x83uWvPe8i6umn97pO73KAhx64b872P/6Hv59zvUHb7m3fW1P35123f3WP7XWXPfXEE3P2bRjdel573kXtvLtu/+pu+3zqiSf2qLs7PUx/5jpWvf0ctK3+56a/rv599e93vjr3tq/u/gZtq7f9oLb9681V21zb7h6v3uM21367euvurtf/2ptv/4O2Cz/pz1zHsL+/va/J/mX78ns0aP3e6f7js7c+DKP7+ur/nYP5L3C///3v5wW/+OYF73u+bY8iGJbbSOFEYEdV3V1VjwNXA2dOuCZJmhqpqknX0EpyNnBaVf1aM/0m4F9U1YU9bTYDmwGOOuqol333u99d6L52m+4ehyRU1R4/e9fpPWa9y/un+9vPt2zYbc9V21zLFrKt3uPS26Z//qDjN0hv+0F9HvR8zLWtvS2fb9vD1NldPuzroH9fc/3sbzNoW737nm/bve0HbXuubQ3q56D2g9af6zXUv92Fbmu+Y7AU295Xezu+w6w7qr+xi9l2kluranbQsuU2Uhj0m7pbr6tqa1XNVtXszMzMmMqSpOmw3EJhJ3Bkz/Q6YM8TqJKkkVhuofA1YEOSo5McBJwDbBvFjrZs2cKWLVtYs2bNwFMJW7ZsAWD//fffY16v3uUAL3rRi3Zr3zt98MEHz7neli1b2Lhx427zetv37r/7s7d9d3vdZWvWrNmj1n3RPT69Nm7cuNu8NWvW7NGmt8b+PvX3p/9YDdpG9+egtt0+99fVv6+DDz54j+PRX2f/8zHXvrr7G9Sm/3Fv2yR7rDdXbXNtu3sMeo/FXPvt6q27u95cfe3WOcx24Sd96x7D/ue3v7+9/exfNt/v0Xzb7p3uPz5768Mwel9fg57DvVnsviex7WV1TQEgyenAx4D9gcuq6oNztZ2dna3t27ePrTZJWg32dk1hWb0lFaCqvgh8cdJ1SNI0Wm6njyRJE2QoSJJahoIkqWUoSJJay+7dR/siyS5gYR9phrXAD5awnJXAPk8H+zwdFtPnF1XVwE//ruhQWIwk2+d6S9ZqZZ+ng32eDqPqs6ePJEktQ0GS1JrmUNg66QImwD5PB/s8HUbS56m9piBJ2tM0jxQkSX0MBUlSa9WHQpLTknw7yY4k7x6wfE2SzzbLb0myfvxVLq0h+vzOJHcm+UaSG5PseS/mFWa+Pve0OztJJVnxb18cps9J3tA8199M8t/HXeNSG+K1fVSSm5L8ZfP6Pn0SdS6VJJcleTDJHXMsT5KPN8fjG0leuuidVtWq/Ufn9tv/DzgGOAi4HTiur82vA59qHp8DfHbSdY+hz78IPLN5/LZp6HPT7tnAV4CbgdlJ1z2G53kD8JfAoc308yZd9xj6vBV4W/P4OOCeSde9yD7/AvBS4I45lp8O/Amdb608Cbhlsftc7SOFE4EdVXV3VT0OXA2c2dfmTOCK5vE1wKnZ25cDL3/z9rmqbqqqx5rJm+l8w91KNszzDPAB4L8APx5ncSMyTJ//LfDJqnoYoKoeHHONS22YPhfwnObxwazwb26sqq8AD+2lyZnAldVxM3BIksMXs8/VHgpHAN/rmd7ZzBvYpqqeBB4BDhtLdaMxTJ97nU/nfxor2bx9TvIS4Miqum6chY3QMM/zTwE/leR/J7k5yWljq240hunz+4A3JtlJ53tZ3jGe0iZmX3/f57XsvmRniQ36H3//e3CHabOSDN2fJG8EZoF9+47B5WevfU6yH/BR4C3jKmgMhnmeD6BzCulkOqPB/5Xk+Kr60YhrG5Vh+rwJ+HRV/U6SlwN/0PT56dGXNxFL/vdrtY8UdgJH9kyvY8/hZNsmyQF0hpx7G64td8P0mSS/BLwXOKOq/nFMtY3KfH1+NnA88KUk99A597pthV9sHva1fW1VPVFV3wG+TSckVqph+nw+8DmAqvq/wDPo3DhutRrq931frPZQ+BqwIcnRSQ6icyF5W1+bbcC5zeOzgT+v5grOCjVvn5tTKf+VTiCs9PPMME+fq+qRqlpbVeuraj2d6yhnVNVK/oLvYV7bf0znTQUkWUvndNLdY61yaQ3T53uBUwGS/AydUNg11irHaxvw5uZdSCcBj1TV/YvZ4Ko+fVRVTya5ELiezjsXLquqbyb5z8D2qtoGXEpniLmDzgjhnMlVvHhD9vm3gGcBf9hcU7+3qs6YWNGLNGSfV5Uh+3w98OokdwJPAf+hqn44uaoXZ8g+/ybw35JcTOc0yltW8n/yklxF5/Tf2uY6yRbgQICq+hSd6yanAzuAx4DzFr3PFXy8JElLbLWfPpIk7QNDQZLUMhQkSS1DQZLUMhQkSS1DQVqgJP+quePqsZOuRVoqhoK0cJuAv2CFf7ZF6mUoSAuQ5FnAK+ncVuGcZt5+SX63+e6C65J8McnZzbKXJflykluTXL/YO1lKo2IoSAtzFvCnVfU3wEPNl5u8DlgP/DPg14CXAyQ5EPgEcHZVvQy4DPjgJIqW5rOqb3MhjdAm4GPN46ub6QOBP2zuyPn9JDc1y3+azg35bmhuK7I/sKj700ijYihI+yjJYcApwPFJis4f+QK+MNcqwDer6uVjKlFaME8fSfvubDrfdvWi5s6rRwLfAX4A/Ovm2sLz6dzIDDq3rJ5p7u9PkgOT/OwkCpfmYyhI+24Te44KPg+8kM797e+gc2vyW+jcyvhxOkHy4SS3A18HXjG+cqXheZdUaQkleVZV/X1ziumrwCur6vuTrksaltcUpKV1XZJDgIOADxgIWmkcKUiSWl5TkCS1DAVJUstQkCS1DAVJUstQkCS1/j+TrIzyJko1EQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fare\n",
      "----------------------------------------------\n",
      "Shapiro-Wilk: 0.522,p-valor= 0.000\n",
      "Kolmogorov-Smirnov: 0.500,p-valor= 0.000\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "NFamily\n",
      "----------------------------------------------\n",
      "Shapiro-Wilk: 0.615,p-valor= 0.000\n",
      "Kolmogorov-Smirnov: 0.500,p-valor= 0.000\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "NCabin\n",
      "----------------------------------------------\n",
      "Shapiro-Wilk: 0.138,p-valor= 0.000\n",
      "Kolmogorov-Smirnov: 0.500,p-valor= 0.000\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "column_cuant = [\"Age\",\"Fare\",\"NFamily\",\"NCabin\"]\n",
    "#fig, axs = plt.subplots(nrows=1, ncols=len(column_cuant), figsize=(10, 4))\n",
    "for column in column_cuant:\n",
    "    shapiro_test = stats.shapiro(titanic_normalized_df[column])\n",
    "    kolmo_test = stats.kstest(titanic_normalized_df[column],'norm')\n",
    "    print(column)\n",
    "    print('----------------------------------------------')\n",
    "    print('Shapiro-Wilk: %.3f,p-valor= %.3f' % shapiro_test)\n",
    "    print('Kolmogorov-Smirnov: %.3f,p-valor= %.3f' % kolmo_test)\n",
    "    plt.hist(x=titanic_normalized_df[column], bins=20, color=\"#3182bd\", alpha=0.5)\n",
    "    plt.plot(titanic_normalized_df[column], np.full_like(titanic_normalized_df[column], -0.01), '|k', markeredgewidth=1)\n",
    "    plt.xlabel(column)\n",
    "    plt.ylabel('counts')\n",
    "    plt.show()\n",
    "  \n",
    "   \n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 493,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "stats.probplot(titanic_normalized_df[\"Age\"],plot=plt)\n",
    "stats.probplot(titanic_normalized_df[\"Fare\"],plot=plt)\n",
    "plt.tight_layout();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 494,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "execution_count": 494,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "stats.probplot(titanic_normalized_df[\"Fare\"],plot=plt)\n",
    "plt.figure()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 523,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                    Survived    Pclass       Sex       Age      Fare  \\\n",
      "Survived            1.000000 -0.338481 -0.543351 -0.098612  0.257307   \n",
      "Pclass             -0.338481  1.000000  0.131900 -0.384010 -0.549500   \n",
      "Sex                -0.543351  0.131900  1.000000  0.150848 -0.182333   \n",
      "Age                -0.098612 -0.384010  0.150848  1.000000  0.090441   \n",
      "Fare                0.257307 -0.549500 -0.182333  0.090441  1.000000   \n",
      "NFamily             0.016639  0.065997 -0.200988 -0.312027  0.217138   \n",
      "NCabin              0.072724 -0.194303 -0.046732 -0.039444  0.489373   \n",
      "Embarked_Q          0.003650  0.221009 -0.074115  0.023183 -0.117216   \n",
      "Embarked_S         -0.155660  0.081720  0.125722 -0.045920 -0.166603   \n",
      "Title_Col           0.011329 -0.074282  0.034990  0.094488 -0.001126   \n",
      "Title_Don          -0.026456 -0.052496  0.024728  0.024093 -0.003026   \n",
      "Title_Dr            0.008185 -0.108935  0.039034  0.072772  0.030395   \n",
      "Title_Jonkheer     -0.026456 -0.052496  0.024728  0.019350 -0.021735   \n",
      "Title_Lady          0.042470 -0.052496 -0.045439  0.043063  0.004992   \n",
      "Title_Major         0.011329 -0.074282  0.034990  0.062612 -0.003514   \n",
      "Title_Master        0.085221  0.082081  0.159934 -0.386547  0.010908   \n",
      "Title_Miss          0.327093 -0.000576 -0.686808 -0.323876  0.118271   \n",
      "Title_Mlle          0.060095 -0.074282 -0.064296 -0.019594  0.025974   \n",
      "Title_Mme           0.042470 -0.052496 -0.045439 -0.013847  0.025037   \n",
      "Title_Mr           -0.549199  0.142698  0.867334  0.257852 -0.183766   \n",
      "Title_Mrs           0.339040 -0.149209 -0.547600  0.163652  0.105203   \n",
      "Title_Ms            0.042470 -0.012381 -0.045439 -0.004362 -0.012961   \n",
      "Title_Rev          -0.064988 -0.030413  0.060741  0.077626 -0.023031   \n",
      "Title_Sir           0.042470 -0.052496  0.024728  0.045434  0.016687   \n",
      "Title_the Countess  0.042470 -0.052496 -0.045439  0.007494  0.036645   \n",
      "\n",
      "                     NFamily    NCabin  Embarked_Q  Embarked_S  Title_Col  \\\n",
      "Survived            0.016639  0.072724    0.003650   -0.155660   0.011329   \n",
      "Pclass              0.065997 -0.194303    0.221009    0.081720  -0.074282   \n",
      "Sex                -0.200988 -0.046732   -0.074115    0.125722   0.034990   \n",
      "Age                -0.312027 -0.039444    0.023183   -0.045920   0.094488   \n",
      "Fare                0.217138  0.489373   -0.117216   -0.166603  -0.001126   \n",
      "NFamily             1.000000  0.171728   -0.058592    0.079977  -0.026608   \n",
      "NCabin              0.171728  1.000000   -0.046523   -0.045468  -0.007175   \n",
      "Embarked_Q         -0.058592 -0.046523    1.000000   -0.496624  -0.014588   \n",
      "Embarked_S          0.079977 -0.045468   -0.496624    1.000000  -0.023607   \n",
      "Title_Col          -0.026608 -0.007175   -0.014588   -0.023607   1.000000   \n",
      "Title_Don          -0.018804 -0.005070   -0.010310   -0.054125  -0.001590   \n",
      "Title_Dr           -0.018386 -0.013461    0.017874   -0.030089  -0.004221   \n",
      "Title_Jonkheer     -0.018804 -0.005070   -0.010310    0.020759  -0.001590   \n",
      "Title_Lady          0.001983 -0.005070   -0.010310   -0.054125  -0.001590   \n",
      "Title_Major        -0.026608 -0.007175   -0.014588    0.029374  -0.002250   \n",
      "Title_Master        0.372472  0.010176    0.010478    0.025291  -0.010283   \n",
      "Title_Miss          0.112838  0.066818    0.171117   -0.134000  -0.024031   \n",
      "Title_Mlle         -0.026608 -0.007175   -0.014588   -0.076588  -0.002250   \n",
      "Title_Mme          -0.018804 -0.005070   -0.010310   -0.054125  -0.001590   \n",
      "Title_Mr           -0.338014 -0.042626   -0.078338    0.118482  -0.055767   \n",
      "Title_Mrs           0.156168 -0.009863   -0.089739   -0.002512  -0.019160   \n",
      "Title_Ms           -0.018804 -0.005070   -0.010310    0.020759  -0.001590   \n",
      "Title_Rev          -0.029170 -0.012455    0.023515    0.020335  -0.003905   \n",
      "Title_Sir           0.001983 -0.005070   -0.010310   -0.054125  -0.001590   \n",
      "Title_the Countess -0.018804 -0.005070   -0.010310    0.020759  -0.001590   \n",
      "\n",
      "                    ...  Title_Master  Title_Miss  Title_Mlle  Title_Mme  \\\n",
      "Survived            ...      0.085221    0.327093    0.060095   0.042470   \n",
      "Pclass              ...      0.082081   -0.000576   -0.074282  -0.052496   \n",
      "Sex                 ...      0.159934   -0.686808   -0.064296  -0.045439   \n",
      "Age                 ...     -0.386547   -0.323876   -0.019594  -0.013847   \n",
      "Fare                ...      0.010908    0.118271    0.025974   0.025037   \n",
      "NFamily             ...      0.372472    0.112838   -0.026608  -0.018804   \n",
      "NCabin              ...      0.010176    0.066818   -0.007175  -0.005070   \n",
      "Embarked_Q          ...      0.010478    0.171117   -0.014588  -0.010310   \n",
      "Embarked_S          ...      0.025291   -0.134000   -0.076588  -0.054125   \n",
      "Title_Col           ...     -0.010283   -0.024031   -0.002250  -0.001590   \n",
      "Title_Don           ...     -0.007267   -0.016983   -0.001590  -0.001124   \n",
      "Title_Dr            ...     -0.019292   -0.045085   -0.004221  -0.002983   \n",
      "Title_Jonkheer      ...     -0.007267   -0.016983   -0.001590  -0.001124   \n",
      "Title_Lady          ...     -0.007267   -0.016983   -0.001590  -0.001124   \n",
      "Title_Major         ...     -0.010283   -0.024031   -0.002250  -0.001590   \n",
      "Title_Master        ...      1.000000   -0.109844   -0.010283  -0.007267   \n",
      "Title_Miss          ...     -0.109844    1.000000   -0.024031  -0.016983   \n",
      "Title_Mlle          ...     -0.010283   -0.024031    1.000000  -0.001590   \n",
      "Title_Mme           ...     -0.007267   -0.016983   -0.001590   1.000000   \n",
      "Title_Mr            ...     -0.254903   -0.595692   -0.055767  -0.039411   \n",
      "Title_Mrs           ...     -0.087580   -0.204670   -0.019160  -0.013541   \n",
      "Title_Ms            ...     -0.007267   -0.016983   -0.001590  -0.001124   \n",
      "Title_Rev           ...     -0.017851   -0.041717   -0.003905  -0.002760   \n",
      "Title_Sir           ...     -0.007267   -0.016983   -0.001590  -0.001124   \n",
      "Title_the Countess  ...     -0.007267   -0.016983   -0.001590  -0.001124   \n",
      "\n",
      "                    Title_Mr  Title_Mrs  Title_Ms  Title_Rev  Title_Sir  \\\n",
      "Survived           -0.549199   0.339040  0.042470  -0.064988   0.042470   \n",
      "Pclass              0.142698  -0.149209 -0.012381  -0.030413  -0.052496   \n",
      "Sex                 0.867334  -0.547600 -0.045439   0.060741   0.024728   \n",
      "Age                 0.257852   0.163652 -0.004362   0.077626   0.045434   \n",
      "Fare               -0.183766   0.105203 -0.012961  -0.023031   0.016687   \n",
      "NFamily            -0.338014   0.156168 -0.018804  -0.029170   0.001983   \n",
      "NCabin             -0.042626  -0.009863 -0.005070  -0.012455  -0.005070   \n",
      "Embarked_Q         -0.078338  -0.089739 -0.010310   0.023515  -0.010310   \n",
      "Embarked_S          0.118482  -0.002512  0.020759   0.020335  -0.054125   \n",
      "Title_Col          -0.055767  -0.019160 -0.001590  -0.003905  -0.001590   \n",
      "Title_Don          -0.039411  -0.013541 -0.001124  -0.002760  -0.001124   \n",
      "Title_Dr           -0.104624  -0.035947 -0.002983  -0.007327  -0.002983   \n",
      "Title_Jonkheer     -0.039411  -0.013541 -0.001124  -0.002760  -0.001124   \n",
      "Title_Lady         -0.039411  -0.013541 -0.001124  -0.002760  -0.001124   \n",
      "Title_Major        -0.055767  -0.019160 -0.001590  -0.003905  -0.001590   \n",
      "Title_Master       -0.254903  -0.087580 -0.007267  -0.017851  -0.007267   \n",
      "Title_Miss         -0.595692  -0.204670 -0.016983  -0.041717  -0.016983   \n",
      "Title_Mlle         -0.055767  -0.019160 -0.001590  -0.003905  -0.001590   \n",
      "Title_Mme          -0.039411  -0.013541 -0.001124  -0.002760  -0.001124   \n",
      "Title_Mr            1.000000  -0.474952 -0.039411  -0.096808  -0.039411   \n",
      "Title_Mrs          -0.474952   1.000000 -0.013541  -0.033262  -0.013541   \n",
      "Title_Ms           -0.039411  -0.013541  1.000000  -0.002760  -0.001124   \n",
      "Title_Rev          -0.096808  -0.033262 -0.002760   1.000000  -0.002760   \n",
      "Title_Sir          -0.039411  -0.013541 -0.001124  -0.002760   1.000000   \n",
      "Title_the Countess -0.039411  -0.013541 -0.001124  -0.002760  -0.001124   \n",
      "\n",
      "                    Title_the Countess  \n",
      "Survived                      0.042470  \n",
      "Pclass                       -0.052496  \n",
      "Sex                          -0.045439  \n",
      "Age                           0.007494  \n",
      "Fare                          0.036645  \n",
      "NFamily                      -0.018804  \n",
      "NCabin                       -0.005070  \n",
      "Embarked_Q                   -0.010310  \n",
      "Embarked_S                    0.020759  \n",
      "Title_Col                    -0.001590  \n",
      "Title_Don                    -0.001124  \n",
      "Title_Dr                     -0.002983  \n",
      "Title_Jonkheer               -0.001124  \n",
      "Title_Lady                   -0.001124  \n",
      "Title_Major                  -0.001590  \n",
      "Title_Master                 -0.007267  \n",
      "Title_Miss                   -0.016983  \n",
      "Title_Mlle                   -0.001590  \n",
      "Title_Mme                    -0.001124  \n",
      "Title_Mr                     -0.039411  \n",
      "Title_Mrs                    -0.013541  \n",
      "Title_Ms                     -0.001124  \n",
      "Title_Rev                    -0.002760  \n",
      "Title_Sir                    -0.001124  \n",
      "Title_the Countess            1.000000  \n",
      "\n",
      "[25 rows x 25 columns]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fb4d097f510>"
      ]
     },
     "execution_count": 523,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print(titanic_normalized_df.corr())\n",
    "sns.heatmap(titanic_normalized_df.corr())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "¿Inflye en la supevivencia de las mujeres la edad?\n",
    " Mann-Whitney "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 497,
   "metadata": {},
   "outputs": [],
   "source": [
    "def rev_min_max_func(scaled_val,column):\n",
    "    max_val = max(titanic_df[column])\n",
    "    min_val = min(titanic_df[column])\n",
    "    og_val = (scaled_val*(max_val - min_val)) + min_val\n",
    "    return og_val\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 545,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Shapiro-Wilk: 0.977,p-valor= 0.001\n",
      "Shapiro-Wilk: 0.969,p-valor= 0.045\n",
      "MannwhitneyuResult(statistic=7730.0, pvalue=0.007662709137217837)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Age')"
      ]
     },
     "execution_count": 545,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "women_df = titanic_normalized_df.loc[(titanic_normalized_df[\"Sex\"] == 0)]\n",
    "\n",
    "women_survived_df = mujeres_df[mujeres_df[\"Survived\"] == 1]\n",
    "women_no_survived_df = mujeres_df[mujeres_df[\"Survived\"] == 0]\n",
    "shapiro_test = stats.shapiro(women_survived_df[\"Age\"])\n",
    "print('Shapiro-Wilk: %.3f,p-valor= %.3f' % shapiro_test)\n",
    "shapiro_test = stats.shapiro(women_no_survived_df[\"Age\"])\n",
    "print('Shapiro-Wilk: %.3f,p-valor= %.3f' % shapiro_test)\n",
    "mw = stats.mannwhitneyu(women_survived_df[\"Age\"], women_no_survived_df[\"Age\"])\n",
    "print(mw)\n",
    "axarr = mujeres_df.boxplot(column='Age', by=\"Survived\",\n",
    "                   figsize=(8, 6), grid=False)\n",
    "axarr.set_title('')\n",
    "axarr.set_ylabel('Age')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "max_age = titanic_df[\"Age\"].max()\n",
    "min_age = titanic_df[\"Age\"].min()\n",
    "print(rev_min_max_func(0.221,\"Age\"))\n",
    "mujeres_df[\"Adult\"] = np.where(mujeres_df['Age']< 0.221, 0, 1)\n",
    "max_age = 1\n",
    "scaler = MinMaxScaler()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
